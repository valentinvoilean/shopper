/*================  Breakpoint mixin ================*/

// e.g: @include breakpoint('tabletMax'){ color: red; }
// breakpoints: mobile, tablet, tabletMax, tabletMin, desktop
@mixin breakpoint($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      $breakpoint-found: true;

      @media only screen and #{$declaration} {
        @content;
      }
    }
  }

  @if $breakpoint-found == false {
    @warn "Breakpoint '#{$media-query}' does not exist";
  }
}


/// test layout

$layouts: (
  'mobile' (12, 1.5625%),
  'tablet' (12, 2.604%),
  'desktop' (12, 24px)
);

@each $layout in $layouts {
  $bp: nth($layout, 1);
  $settings: nth($layout, 2);
  $columns: nth($settings, 1);
  $gutterWidth: nth($settings, 2);

  @for $i from 1 through $columns {
    $gutters: $columns - 1;
    $guttersTotalWidth: $gutters * $gutterWidth;
    $insideGuttersTotalWidth: ($i - 1) * $gutterWidth;

    .col-#{$bp}-#{$i} {

      @include breakpoint($bp) {
        @if is-percentage($gutterWidth) {
          $colsTotalWidth: 100% - $guttersTotalWidth;
          width: $colsTotalWidth / $columns * $i + $insideGuttersTotalWidth;
        }

        @if is-absolute-length($gutterWidth) {
          width: calc(#{100% / $columns * $i} - #{$guttersTotalWidth / $columns * $i - $insideGuttersTotalWidth});
        }

        margin-right: $gutterWidth;
        float: left;

        &:last-child {
          margin-right: 0;
        }
      }
    }
  }
}